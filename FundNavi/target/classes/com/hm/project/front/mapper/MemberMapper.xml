<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hm.project.front.mapper.MemberMapper">

	<resultMap type="com.hm.project.domain.MemberVO" id="memberMap">
		<id property="userid" column="userid"/>
		<result property="userid" column="userid"/>
		<result property="userpw" column="userpw"/>
		<result property="phone" column="phone"/>
		<result property="regDate" column="regdate"/>
		<result property="address" column="address"/>
		<result property="job" column="job"/>
		<result property="account" column="account"/>
		<result property="profile_image" column="profile_image"/>
		<result property="interesting_category" column="interesting_category"/>
		<result property="self_introduce" column="self_introduce"/>
		<result property="name" column="name"/>
		<result property="bank" column="bank"/>
		<result property="nickname" column="nickname"/>
		<result property="auth" column="auth"/>
		<collection property="authList" resultMap="authMap">
		</collection> 
	</resultMap>
	
	<resultMap type="com.hm.project.domain.AuthVO" id="authMap">
		<result property="userid" column="userid"/>
		<result property="auth" column="auth"/>
	</resultMap>

	<!--
	member_auth table은 사용 하지 않고 AuthVO만 사용한다.
	tbl_member 의 autho 컬럼 정보만 따로 담아는 객차이다.
	Spring Security의 기본 사용법과 다르게 tbl_member에 권한 컴럼(auth)을
	넣어서 사용하기에 기본 사용법과 달라진다.
	-->
	
	<select id="read" resultMap="memberMap">
	SELECT	userid,
			userpw,
			name,
			auth
	FROM	pr_member
	WHERE	userid = #{userid} 
	</select>
	
	<select id="member_total" resultType="int">
			SELECT count(*) 
			FROM  pr_member
	</select>
	
	
	<resultMap type="com.hm.project.domain.MemberVO" id="mypageMap">
		<id property="userid" column="userid"/>
		<result property="nickname" column="nickname"/>
		<result property="profile_image" column="profile_image"/>
		<result property="account" column="account"/>
		<result property="bank" column="bank"/>
	</resultMap>
	
	<select id="myPage" resultMap="mypageMap">
		SELECT	userid,
				nickname,
				profile_image,
				account,
				job,
				bank
		FROM	pr_member
		WHERE	userid = #{userid}
	</select>

	<!-- 회원가입 -->
	<insert id="insert">
	INSERT INTO	pr_member(  	userid,
								userpw,
								job,
								phone,
								address,
								name,
								nickname,
								auth
							) 
		VALUES	(   #{userid},
					#{userpw},
					#{job},
					#{phone},
					#{address},
					#{name},
					#{nickname},
					'ROLE_USER'
	)
	</insert>
	
	<update id="signupInvest">
		 UPDATE	 pr_member 
		 SET	 bank = #{bank},
				 account = #{account}
		 WHERE	 userid = #{userid} 
	</update>
	
	<!-- 프로필 업데이트 -->
	<update id="update">
		UPDATE 	pr_member 
		SET		profile_image = #{profile_image},
				interesting_category = #{interesting_category},
				self_introduce = #{self_introduce} 
		WHERE	userid = #{userid} 
	</update>
	
	<!-- 마이페이지 프로젝트. 진행 중 -->
	<select id="myPageProject" resultType="com.hm.project.domain.ProjectVO">
	<![CDATA[
	SELECT	simple_content, 
			project_start, 
			project_end, 
			project_distinct
	FROM	pr_project 
	WHERE	userid = #{userid} 
	AND		project_end > SYSDATE
	]]>
	</select>
	
	<!-- 마이페이지 프로젝트. 종료 됨 -->
	<select id="myPageProjectEnd" resultType="com.hm.project.domain.ProjectVO">
	<![CDATA[
	SELECT	simple_content, 
			project_start, 
			project_end, 
			project_distinct
	FROM	pr_project 
	WHERE	userid = #{userid} 
	AND		project_end < SYSDATE
	]]>
	</select>

</mapper>